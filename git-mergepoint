#! /usr/bin/env perl

use strict;
use warnings;

use Getopt::Long qw(:config posix_default no_ignore_case gnu_compat);
use Pod::Usage;

GetOptions(
    'v|verbose'   => \my $is_verbose,
    'h|help'      => sub { pod2usage(1) },
    'm|man'       => sub { pod2usage(-verbose => 2) },
) or pod2usage(1);

main: {
    my ( $target_commit_hash ) = @ARGV;

    my @merged_commit_hash_list = split "\n", `git log --merges --pretty=%H`;
    if ( grep { $_ eq $target_commit_hash } @merged_commit_hash_list ) {
        print "this commit hash is MERGE COMMIT: $target_commit_hash\n";
        exit 1;
    }

    for my $commit_hash (@merged_commit_hash_list) {
        my $is_found = system( "git log HEAD...$commit_hash --pretty=%H | grep -q $target_commit_hash") ? 0 : 1;

        next unless $is_found;

        my $option = $is_verbose ? '-m' : '';
        print `git show $option $commit_hash`;

        exit;
    }

    print "not found: $target_commit_hash\nit's may be commited by -ff\n";
    exit 2;
}


__END__

=head1 NAME

git-mergepoint - show merge commit of spefified commit

With this, you can see what pull-request merged the spefified commit.

=head1 SYNOPSIS

  $ git mergepoint [-v] <commit>

=head1 OPTIONS

  --verbose, -v      show merge commit in detail
  --help,    -h      show this message
  --man,     -m      full documentaion
